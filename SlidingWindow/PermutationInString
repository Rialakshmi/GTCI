import java.util.*;
/*
Permutation in a String (hard) 
Given a string and a pattern, find out if the string contains any permutation of the pattern.
*/
class StringPermutation {
  public static boolean findPermutation(String str, String pattern) {
     HashMap<Character,Integer> hm = new HashMap<>();
        for(char c:pattern.toCharArray()) {
            hm.put(c,hm.getOrDefault(c,0)+1);
        }
        
        int startWindow=0;
        int matchCount=0;
        for(int endWindow=0;endWindow<str.length();endWindow++) {
            
            char right=str.charAt(endWindow);
            if(hm.containsKey(right)) {
                hm.put(right,hm.get(right)-1);
                if(hm.get(right)==0)
                    matchCount++;
            }
            if(matchCount==hm.size())
                return true;
            if(endWindow+1-pattern.length()>=0) {
                char left=str.charAt(startWindow++);
                if(hm.containsKey(left)) {
                    if(hm.get(left)==0)
                        matchCount--;
                    hm.put(left,hm.get(left)+1);
                }
            }
        }
        
        return false;
  }
}
